plugins {
    id "java"
    id "idea"
    id "org.jetbrains.compose"
    id "org.jetbrains.kotlin.jvm"
    id "me.yuugiri.fluiditygradle"
}

group 'me.liuli.fluidity.gui'

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

configurations.all {
    attributes {
        attribute(Attribute.of("ui", String.class), "awt")
    }
    resolutionStrategy.eachDependency {
        if (requested.group == "org.jetbrains.compose.compiler") {
            useTarget("androidx.compose.compiler:compiler:1.3.3")
        }
    }
}

repositories {
    mavenLocal()
    maven {
        name = "ExpertCheat"
        url = "https://mccheatz.github.io/maven_repo/"
        content {
            includeModule("org.jetbrains.compose", "preview-rpc")
            includeGroupByRegex "androidx\\.compose\\.compiler.*"
            includeGroupByRegex "org\\.jetbrains\\.compose.*"
            includeGroupByRegex "org\\.jetbrains\\.skiko.*"
            includeGroupByRegex "io\\.material.*"
        }
    }
    maven {
        url = "https://maven.pkg.jetbrains.space/public/p/compose/dev"
        content {
            includeGroupByRegex "org\\.jetbrains\\.compose.*"
            includeModuleByRegex("org\\.jetbrains\\.skiko.*", "skiko-awt-runtime-.*")
        }
    }
    mavenCentral()
}

String targetOs = "linux"
if (System.getProperty("os.name").startsWith("Win")) {
    targetOs = "windows"
} else if (System.getProperty("os.name") == "Mac OS X") {
    targetOs = "macos"
}
String targetArch = "x64"
if (System.getProperty("os.arch") == "aarch64") {
    targetArch = "arm64"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation project(":core")

    // compose
    implementation "org.jetbrains.skiko:skiko-awt:$skiko_version"
    implementation("org.jetbrains.compose.material3:material3-desktop:$compose_version")  {
        exclude module: "kotlin-stdlib"
        exclude module: "kotlin-stdlib-common"
        exclude module: "kotlin-stdlib-jdk8"
        exclude group: "org.jetbrains.skiko"
    }
    implementation("org.jetbrains.compose.ui:ui-tooling:$compose_version") {
        exclude group: "org.jetbrains.skiko"
    }
//    implementation("org.jetbrains.compose:preview-rpc:1.2.0")
//    implementation("org.jetbrains.compose.material:material-icons-extended:$compose_version") {
//        exclude group: "org.jetbrains.skiko"
//    }
    implementation 'io.material.color:material-color-utilities:0.2.0'

    runtimeOnly "org.jetbrains.skiko:skiko-awt-runtime-$targetOs-$targetArch:0.7.36"

    implementation MinecraftDependencyKt.minecraftDep(project, "core/src/main/resources/fluidity_at.cfg")
}

compose.desktop.application {
}